name: Build, Test, SonarQube, Cypress E2E, and Docker Push

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back-end   # My backend folder

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Maven local repository
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Build and run backend tests
        run: mvn clean verify

      - name: Build Docker image for backend (test)
        run: docker build -t backend-test-image:latest .

      - name: Run backend container with H2 test profile
        run: |
          docker run -d -p 8080:8080 --name backend-test-container backend-test-image:latest --spring.profiles.active=test

      - name: Wait for backend container to be healthy
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/actuator/health | grep -q UP; then
              echo "Backend container is healthy!"
              break
            else
              echo "Waiting for backend container to be healthy..."
              sleep 5
            fi
          done

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.projectKey=MilanVanSteen_S3-Milan-van-Steen -Dsonar.organization=milanvansteen -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Push backend test success metric to Grafana Cloud
        if: success()
        run: |
          curl -X POST "https://otlp-gateway-prod-eu-west-2.grafana.net/otlp/v1/metrics" \
            -H "Content-Type: application/json" \
            -u "${{ secrets.GRAFANA_API_KEY }}:" \
            -d '{
              "resourceMetrics": [
                {
                  "scopeMetrics": [
                    {
                      "metrics": [
                        {
                          "name": "ci_backend_tests_passed",
                          "unit": "1",
                          "gauge": {
                            "dataPoints": [
                              {
                                "asInt": 1,
                                "timeUnixNano": '"$(date +%s%N)"'
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }'


      - name: Stop and remove backend-test container
        run: |
          docker stop backend-test-container || true
          docker rm backend-test-container || true

      - name: Build Docker image for backend
        run: docker build -t milanvansteen/s3-milan-van-steen-backend:latest .

      - name: Check Docker secrets
        run: |
          echo "Username length: ${{ secrets.DOCKERHUB_USERNAME }}" | wc -c
          echo "Password length: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | wc -c

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push backend image to Docker Hub
        run: docker push milanvansteen/s3-milan-van-steen-backend:latest

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: List front-end files
        run: ls -la front-end

      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
        working-directory: front-end

      - name: Run unit tests (Vitest)
        run: npm run test -- --coverage
        working-directory: front-end

      - name: Run SonarCloud Scan for Frontend
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front-end
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}

      - name: Run Cypress tests with server start
        uses: cypress-io/github-action@v5
        with:
          start: npm run dev
          wait-on: http://localhost:5173
          wait-on-timeout: 60
          working-directory: front-end
        env:
          VITE_ENV: ci

      - name: Build Docker image for frontend
        run: docker build -t milanvansteen/s3-milan-van-steen-frontend:latest ./front-end

      - name: Check Docker secrets
        run: |
          echo "Username length: ${{ secrets.DOCKERHUB_USERNAME }}" | wc -c
          echo "Password length: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | wc -c

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push frontend image to Docker Hub
        run: docker push milanvansteen/s3-milan-van-steen-frontend:latest


