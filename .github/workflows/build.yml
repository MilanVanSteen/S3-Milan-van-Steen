name: Build, Test, SonarQube, Cypress E2E, and Docker Push

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: back-end

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build Docker image for backend
        run: docker build -t milanvansteen/s3-milan-van-steen-backend:latest .

      - name: Run backend container in detached mode
        run: docker run -d --name backend -p 8080:8080 milanvansteen/s3-milan-van-steen-backend:latest

      - name: Show backend container logs
        run: docker logs backend

      - name: Wait for backend container to be healthy
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/actuator/health | grep '"status":"UP"'; then
              echo "Backend container is healthy!"
              exit 0
            fi
            echo "Waiting for backend container to be healthy..."
            sleep 2
          done
          echo "Backend container failed to become healthy in time"
          exit 1

      - name: Run backend tests (inside container)
        run: |
          docker exec backend mvn verify

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.projectKey=MilanVanSteen_S3-Milan-van-Steen -Dsonar.organization=milanvansteen -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Stop and remove backend container
        run: docker rm -f backend

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push backend image to Docker Hub
        run: docker push milanvansteen/s3-milan-van-steen-backend:latest

  build-frontend:
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: List front-end files
        run: ls -la front-end

      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
        working-directory: front-end

      - name: Run unit tests (Vitest)
        run: npm run test -- --coverage
        working-directory: front-end

      - name: Run SonarCloud Scan for Frontend
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front-end
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_FRONTEND }}

      - name: Run Cypress tests with server start
        uses: cypress-io/github-action@v5
        with:
          start: npm run dev
          wait-on: http://localhost:5173
          wait-on-timeout: 60
          working-directory: front-end
        env:
          VITE_ENV: ci

      - name: Build Docker image for frontend
        run: docker build -t milanvansteen/s3-milan-van-steen-frontend:latest ./front-end

      - name: Check Docker secrets
        run: |
          echo "Username length: ${{ secrets.DOCKERHUB_USERNAME }}" | wc -c
          echo "Password length: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | wc -c

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push frontend image to Docker Hub
        run: docker push milanvansteen/s3-milan-van-steen-frontend:latest


